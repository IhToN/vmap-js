!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var f;"undefined"!=typeof window?f=window:"undefined"!=typeof global?f=global:"undefined"!=typeof self&&(f=self),f.VMAP=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){
// Generated by CoffeeScript 1.7.1
var VMAPAdBreak, VMAPAdSource;

VMAPAdSource = _dereq_('./adsource');

VMAPAdBreak = (function() {
  function VMAPAdBreak(xml) {
    var node, subnode, _i, _j, _len, _len1, _ref, _ref1;
    this.timeOffset = xml.getAttribute('timeOffset');
    this.breakType = xml.getAttribute('breakType');
    this.breakId = xml.getAttribute('breakId');
    this.repeatAfter = xml.getAttribute('repeatAfter');
    this.adSource = null;
    this.trackingEvents = [];
    this.extensions = [];
    _ref = xml.childNodes;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      node = _ref[_i];
      switch (node.localName) {
        case 'AdSource':
          this.adSource = new VMAPAdSource(node);
          break;
        case 'TrackingEvents':
          _ref1 = node.childNodes;
          for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
            subnode = _ref1[_j];
            if (subnode.localName === 'Tracking') {
              this.trackingEvents.push({
                event: subnode.getAttribute('event'),
                uri: (subnode.textContent || subnode.text || '').trim()
              });
            }
          }
          break;
        case 'Extensions':
          this.extensions = node.childNodes;
      }
    }
  }

  return VMAPAdBreak;

})();

module.exports = VMAPAdBreak;

},{"./adsource":2}],2:[function(_dereq_,module,exports){
// Generated by CoffeeScript 1.7.1
var VMAPAdSource;

VMAPAdSource = (function() {
  function VMAPAdSource(xml) {
    var node, _i, _len, _ref;
    this.id = xml.getAttribute('id');
    this.allowMultipleAds = xml.getAttribute('allowMultipleAds');
    this.followRedirects = xml.getAttribute('followRedirects');
    this.vastAdData = null;
    this.adTagURI = null;
    this.customData = null;
    _ref = xml.childNodes;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      node = _ref[_i];
      switch (node.localName) {
        case 'AdTagURI':
          this.adTagURI = {
            templateType: node.getAttribute('templateType'),
            uri: (node.textContent || node.text || '').trim()
          };
          break;
        case 'VASTAdData':
          this.vastAdData = node;
          break;
        case 'CustomAdData':
          this.customData = node;
      }
    }
  }

  return VMAPAdSource;

})();

module.exports = VMAPAdSource;

},{}],3:[function(_dereq_,module,exports){
// Generated by CoffeeScript 1.7.1
module.exports = _dereq_('./vmap');

},{"./vmap":4}],4:[function(_dereq_,module,exports){
// Generated by CoffeeScript 1.7.1
var VMAP, VMAPAdBreak;

VMAPAdBreak = _dereq_('./adbreak');

VMAP = (function() {
  function VMAP(xml) {
    var node, _i, _len, _ref;
    if (!(((xml != null ? xml.documentElement : void 0) != null) && xml.documentElement.localName === "VMAP")) {
      throw new Error('Not a VMAP document');
    }
    this.version = xml.documentElement.getAttribute('version');
    this.adBreaks = [];
    this.extensions = [];
    _ref = xml.documentElement.childNodes;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      node = _ref[_i];
      switch (node.localName) {
        case 'AdBreak':
          this.adBreaks.push(new VMAPAdBreak(node));
          break;
        case 'Extensions':
          this.extensions = node.childNodes;
      }
    }
  }

  return VMAP;

})();

module.exports = VMAP;

},{"./adbreak":1}]},{},[3])
(3)
});